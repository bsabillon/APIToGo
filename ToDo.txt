//get all user object
app.get('/user/', (request, response) =>  {
    database.any(`SELECT * FROM "user" `)
    .then((data) => {
        response.json(data);
    })
    .catch((error) => {
        response.send("ERROR" + error);
    }) 

});

//get cartDetails object by userId
app.get('/cartDetailsByUser/:email', (request, response) =>  {
    database.any(`SELECT "cartDetailsId", "cartQuantity", product."productId", product."productName", product."price", product."productPictureURL" FROM "cartDetails"
    INNER JOIN "product" ON product."productId" = "cartDetails"."productId"
	INNER JOIN "cart" ON cart."cartId" = "cartDetails"."cartId"
	WHERE cart."userEmail" = '${request.params.email}'
    `)
    .then((data) => {
        response.json(data);
    })
    .catch((error) => {
        response.send("ERROR" + error);
    }) 

});

//get cartDetailsTotal object by userId
app.get('/cartDetailsTotalByUser/:email', (request, response) =>  {
    database.any(`SELECT 
    SUM ("cartQuantity"*product."price") AS total
    FROM "cartDetails"
        INNER JOIN "product" ON product."productId" = "cartDetails"."productId"
        INNER JOIN "cart" ON cart."cartId" = "cartDetails"."cartId"
        WHERE cart."userEmail" ='${request.params.email}'
        GROUP BY cart."userEmail" 
    `)
    .then((data) => {
        response.json(data);
    })
    .catch((error) => {
        response.send("ERROR" + error);
    }); 
    

});

app.get('/orderDetailsByUser/:email/:cartStatusId', (request, response) =>  {
    database.any(`SELECT "cartDetailsId", "cartQuantity",
    product."productId", product."productName", product."price", product."productPictureURL",
    "address"."addressAlias", "address"."addressDescription","address"."addressPhone","address"."addressReference",
    "card"."cardDescription",
    "cartStatus"."statusDescription"
    FROM "cartDetails"
        INNER JOIN "product" ON product."productId" = "cartDetails"."productId"
        INNER JOIN "cart" ON cart."cartId" = "cartDetails"."cartId"
        INNER Join "cartStatus" ON "cartStatus"."cartStatusId" = "cart"."cartStatusId" 
        INNER JOIN "card" ON card."cardId"  = "cart"."cardId"
        INNER JOIN "address" ON address."addressId"  = "cart"."addressId"
        WHERE cart."userEmail" = '${request.params.email}'
        AND cart."cartStatusId" = '${request.params.cartStatusId}'
    `)
    .then((data) => {
        response.json(data);
    })
    .catch((error) => {
        response.send("ERROR" + error);
    });     



//Create new seller
app.put('/createSeller/:userEmail', (request, response) =>  {
    database.query(`UPDATE public."user"
    SET "sellerId" = (SELECT MAX("user"."sellerId")+1 FROM public."user")
    WHERE "userEmail" = '${request.params.userEmail}'
    `,
    request.body)
    .then((data) => {
        response
        .status(200)
        .json('{"response" : "user updated succesfully!"}');
    })
    .catch( (error) => {
        response.send(error);
    });
});



//Delete product by productId
app.delete('/deleteProduct/:productId', (request, response) =>  {
    database.query(`DELETE FROM "product"
    WHERE "productId" = '${request.params.productId}'
    `,
    request.body)
    .then((data) => {
        response
        .status(200)
        .json('{"response" : "product deleted succesfully!"}');
    })
    .catch( (error) => {
        response.send(error);
    });
});


//get product object by storeId
app.get('/productStoreId/:storeId', (request, response) =>  {
    database.any(`SELECT * FROM "product" WHERE "storeId" = '${request.params.storeId}'`)
    .then((data) => {
        response.json(data);
    })
    .catch((error) => {
        response.send("ERROR" + error);
    }) 

});

//get cartDetailsTotal and Count  by userId
//pending TODO
app.get('/cartTotalCountByUser/:email', (request, response) =>  {
    database.any(`SELECT 
    SUM ("cartQuantity"*product."price") AS total,
	SUM ("cartQuantity") AS NoProductos,
	cart."cartId"
    FROM "cartDetails"
        INNER JOIN "product" ON product."productId" = "cartDetails"."productId"
        INNER JOIN "cart" ON cart."cartId" = "cartDetails"."cartId"
        WHERE cart."userEmail" = '${request.params.email}' AND "cartStatusId"=2
        GROUP BY cart."cartId" 
    `)
    .then((data) => {
        response.json(data);
    })
    .catch((error) => {
        response.send("ERROR" + error);
    }); 
    

});

//get receivedOrdersByUser by userId
//pending TODO
app.get('/receivedOrdersByUser/:email', (request, response) =>  {
    database.any(`SELECT 
    SUM ("cartQuantity"*product."price") AS total,
	SUM ("cartQuantity") AS NoProductos,
	cart."cartId"
    FROM "cartDetails"
        INNER JOIN "product" ON product."productId" = "cartDetails"."productId"
        INNER JOIN "cart" ON cart."cartId" = "cartDetails"."cartId"
        WHERE cart."userEmail" = '${request.params.email}' AND "cartStatusId"=5
        GROUP BY cart."cartId" 
    `)
    .then((data) => {
        response.json(data);
    })
    .catch((error) => {
        response.send("ERROR" + error);
    }); 
    

});






